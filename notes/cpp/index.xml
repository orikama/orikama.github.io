<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Vladimir Matushkin</title><link>https://orikama.github.io/notes/cpp/index.html</link><description>Recent content in C++ on Vladimir Matushkin</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://orikama.github.io/notes/cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>Clang</title><link>https://orikama.github.io/notes/cpp/clang/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orikama.github.io/notes/cpp/clang/index.html</guid><description>Modules Standard C++ Modules do not confuse it with Clang extension(?) Clang modules Compilation Header Unit clang++ -std=c++20 -xc++-system-header --precompile concepts -o concepts.pcm Module Interface Partition Unit clang -std=c++20 -xc++-module -fmodule-file=&amp;lt;MODULE_FILE&amp;gt; Module-InterfacePartition.ixx --precompile -o Module-InterfacePartition.pcm Primary Module Interface Unit clang++ -std=c++20 -xc++-module -fprebuilt-module-path=. Module.ixx --precompile -o Module.pcm # or clang++ -std=c++20 -xc++-module -fmodule-file=Module-InterfacePartition.pcm Module.ixx --precompile -o Module.pcm Module Implementation Unit clang++ -std=c++20 -fmodule-file=M.pcm Module.cpp -c -o Module.o &amp;lt;MODULE_FILE&amp;gt; path to this module dependency (eg.</description></item><item><title>Hacks</title><link>https://orikama.github.io/notes/cpp/hacks/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orikama.github.io/notes/cpp/hacks/index.html</guid><description> C++23 reflexpr on a budget (string -&amp;gt; type) reddit post godbolt, reddit comment, claims that it is a better version tweet godbolt</description></item><item><title>MSVC</title><link>https://orikama.github.io/notes/cpp/msvc/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orikama.github.io/notes/cpp/msvc/index.html</guid><description>Diagnostics ADSP Episode CX: Compiler Diagnostics The Future of C++ Compiler Diagnostics in MSVC and Visual Studio Flags /vmm, /vms, /vmv docs apparently it&amp;rsquo;s possible to control the size of the pointer to member function? learned about it in &amp;ldquo;Game Engine Gems 3, Chapter 13: Generic, Lightweight, and Fast Delegates in C++&amp;rdquo; Hidden MSVC hidden flags /d1ifcInlineFunctions or /dxifcInlineFunctions reddit comments from microsoft devs https://developercommunity.visualstudio.com/t/Functions-imported-from-modules-are-neve/1593838 this flag enabled by default in 17.</description></item><item><title>Sites</title><link>https://orikama.github.io/notes/cpp/sites/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orikama.github.io/notes/cpp/sites/index.html</guid><description> godbolt cppinsights quick-bench</description></item></channel></rss>